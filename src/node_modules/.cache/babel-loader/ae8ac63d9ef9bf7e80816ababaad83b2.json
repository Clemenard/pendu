{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire\\\\Documents\\\\GitHub\\\\hangman\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nconst Letter = ({\n  index,\n  letter,\n  onClick,\n  usedLetters,\n  disabled\n}) => React.createElement(\"div\", {\n  className: \"letter\",\n  onClick: () => onClick(letter, usedLetters),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, disabled || React.createElement(\"button\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, letter));\n\nLetter.propTypes = {\n  letter: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  usedLetters: PropTypes.array.isRequired,\n  disabled: PropTypes.bool.isRequired\n};\nconst ALPHABET = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      usedLetters: [],\n      phrase: 'pendu'\n    };\n\n    this.computeDisplay = (phrase, usedLetters) => {\n      return phrase.replace(/\\w/g, letter => usedLetters.includes(letter) ? letter : '_');\n    };\n\n    this.addLetter = letter => {\n      const usedLetters = this.state.usedLetters;\n      usedLetters.push(letter);\n      console.log(usedLetters);\n      this.setState({\n        usedLetters: usedLetters\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          phrase = _this$state.phrase,\n          usedLetters = _this$state.usedLetters;\n    const won = usedLetters.length === 5;\n    return React.createElement(\"div\", {\n      className: \"pendu \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"pendu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" \", this.computeDisplay(phrase, this.state.usedLetters), \" \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, ALPHABET.map((letter, index) => React.createElement(Letter, {\n      letter: letter,\n      index: index,\n      key: index,\n      onClick: this.addLetter,\n      usedLetters: usedLetters,\n      disabled: usedLetters.includes(letter),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, won && 'Gagné'));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\stagiaire\\Documents\\GitHub\\hangman\\src\\App.js"],"names":["React","Component","PropTypes","Letter","index","letter","onClick","usedLetters","disabled","propTypes","string","isRequired","number","func","array","bool","ALPHABET","App","state","phrase","computeDisplay","replace","includes","addLetter","push","console","log","setState","render","won","length","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n import PropTypes from 'prop-types'\nimport './App.css';\n\n\nconst Letter = ({ index, letter, onClick, usedLetters, disabled }) => (\n  <div className={`letter`} onClick={() => onClick(letter, usedLetters)}>\n  {  disabled ||\n\t\t<button >\n      {letter}\n    </button>\n\t}\n  </div>\n)\nLetter.propTypes = {\n  letter: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n\tusedLetters: PropTypes.array.isRequired,\n\tdisabled: PropTypes.bool.isRequired,\n}\n\nconst ALPHABET = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\n\nclass App extends Component {\n\nstate = {\n\tusedLetters : [],\n\tphrase : 'pendu'\n}\n\n\n\ncomputeDisplay= (phrase, usedLetters) =>{\n  return phrase.replace(/\\w/g,\n    (letter) => (usedLetters.includes(letter) ? letter : '_')\n  )\n}\n\n addLetter= (letter) =>{\n\t \tconst { usedLetters } = this.state\n\tusedLetters.push(letter)\n\tconsole.log(usedLetters)\n\tthis.setState({usedLetters: usedLetters});\n\n\n}\n\n\n\nrender() {\n\tconst { phrase, usedLetters } = this.state\n\tconst won = usedLetters.length === 5\n  return (\n\n<div className=\"pendu \">\n<p id='pendu'> {this.computeDisplay(phrase, this.state.usedLetters)} </p>\n<div className='row'>\n{\n\tALPHABET.map((letter, index) => (\n    <Letter\n      letter={letter}\n      index={index}\n      key={index}\n      onClick={this.addLetter}\n\t\t\tusedLetters={usedLetters}\n\t\t\tdisabled={usedLetters.includes(letter)}\n    />\n))\n}\n</div>\n<p>{won && 'Gagné'}</p>\n</div>\n\n  )\n}}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}